[project]
name = "pytest_demo"
version = "0.1.0"
description = "pytest web test demo"
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "leiju", email = "leijuxx@outlook.com" }]
dependencies = [
    "pytest==8.3.4",
    "pytest-asyncio==0.25.3",
    "pytest-playwright-asyncio==0.7.0",
    "pytest-xdist==3.6.1",
    "allure-pytest==2.13.5",

    "httpx==0.28.1",

    "syrupy==4.8.1",
    "PyYAML==6.0.2",
    "genson==1.3.0",
    "psycopg[binary]==3.2.6",
    "aiomysql==0.2.0",
    "jsonschema==4.23.0",
]

[tool.pytest.ini_options]
minversion = "8.3"
testpaths = "testcases/"
markers = [
    "single: single api test",
    "multiple: multiple api test",
    "negative: abnormal test case",
    "e2e: end-to-end test case",
]

disable_test_id_escaping_and_forfeit_all_rights_to_community_support = true
asyncio_default_fixture_loop_scope = "session"

addopts = [
    "-n 0",
    "--clean-alluredir",
    "--alluredir=reports/allure_results",
    "--snapshot-update",
    "--snapshot-details",
    #    "--snapshot-patch-pycharm-diff",
    "--headed",
    #    "--snapshot-diff-mode=disabled",
    "--output=reports/playwright_results",
    "--video=on",
    "--screenshot=on",
    "--full-page-screenshot",
]

log_auto_indent = true

log_cli = true
log_cli_level = "ERROR"
log_cli_format = "%(asctime)s %(filename)s:%(lineno)s [%(levelname)s]: %(message)s"
log_cli_date_format = "%Y-%m-%d %H:%M:%S"

log_file = "logs/test-{}.log"
log_file_level = "ERROR"
log_file_format = "%(asctime)s %(filename)s:%(lineno)s [%(levelname)s]: %(message)s"
log_file_date_format = "%Y-%m-%d %H:%M:%S"
